#summary Detailed information about the Ableton Clip Control page.

== Page Description ==

The Ableton Clip Control page uses the LiveOSC project to communicate with Ableton Live.  Setup of LiveOSC is described in the document below.  Note that at the time of this writing LiveOSC is only available for Windows users.

== 64 Layout (only this layout for the moment) ==

|| clip || clip || clip || clip || clip || clip || clip || clip ||
|| clip || clip || clip || clip || clip || clip || clip || clip ||
|| clip || clip || clip || clip || clip || clip || clip || clip ||
|| clip || clip || clip || clip || clip || clip || clip || clip ||
|| clip || clip || clip || clip || clip || clip || clip || clip ||
|| clip || clip || clip || clip || clip || clip || clip || clip ||
|| notes/stop || notes/stop || notes/stop || notes/stop || notes/stop || notes/stop || notes/stop || notes/stop ||
|| pvco || nxco || -bpm || +bpm || ---- || ---- || ---- || ---- ||


Each column represents one track in Ableton Live's session view.  The clip buttons trigger clips from top to bottom in the track.  The recX buttons arm or disarm their associated track for recording.  The stpX buttons send a stop signal to their associated track.

The notes/stop buttons have 2 states:
 * if a clip is playing in the track, it shows you midi note feedback from this track by led blinking & if you press it, it stops the clip playing in the track.
 * if nothing is playing, led is off & pressing it has no effect.

The pvco and nxco buttons switch to the previous clip offset or the next clip offset.  Each clip offset shows you a particular slice of the Ableton session view (from top to bottom).  These buttons move your view up and down the ableton clip matrix.

the -bpm and +bpm buttons subtract 1 or add 1 to the current tempo.

---- means no functions (for the moment ;)

= LiveOSC Setup =

1) Download and install Python 2.2.3 to {{{C:\Python22}}}.  Other versions may work as well, this just happens to be the version I'm using.

http://www.python.org/download/releases/2.2.3/

2) Download the LiveAPI package from http://code.google.com/p/liveapi.  Extract it to a temporary folder.

3) Copy the {{{_LiveAPICore}}} folder from the LiveAPI package to {{{C:\Python22\Lib}}}

4) Create a file called {{{__init__.py}}} in the {{{C:\Python22\Lib\_LiveAPICore}}} that contains exactly this one line:

{{{__all__ = ["LiveUtils", "OSC", "RemixNet"]}}}

5) Copy the {{{LiveOSC}}} and {{{LiveTelnet}}} folders both to {{{C:\Program Files\Ableton\...\Resources\MIDI Remote Scripts}}}

6) Delete the {{{LiveOSC.pyc}}} and {{{LiveOSCBindings.pyc}}} files in the {{{LiveOSC}}} folder.  This is so they will get recompiled from the .py files.  I'm not sure if it's needed or not but did it anyways just in case.

7) I have extended the LiveAPI somewhat for this project, you should download the {{{LiveOSC.py}}} and {{{LiveOSCBindings.py}}} files from the Downloads tab and copy them to the {{{C:\Program Files\Ableton\...\Resources\MIDI Remote Scripts\LiveOSC}}} directory.

8) Load up Ableton Live, go to Options -> Preferences -> MIDI and select LiveOSC as a control surface. 

9) In pages, make sure you go to Configuration -> Ableton OSC Settings and click save.  The default settings should work fine.