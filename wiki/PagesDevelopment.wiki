#summary Information on getting started with Pages development.

Pages is written in Java and I use the Eclipse IDE to develop/test it.  Eclipse is a powerful freeware application that can aid development in many programming languages.

The framework has been designed to allow rapid development of new pages by adhering to a Page interface and exposing many utility classes to each page.  This means that all of the work involved in setting up the OSC connection with monome serial, handling button presses and LED messages, receiving MIDI clock signals, Ableton integration, etc. has already been done and is easy to utilize within a page.

A template page has been included to help you get started, and each page class is a self-contained application that can be used for examples.  I highly recommend that you read over a few Java tutorials to get familiar with the language concepts and syntax.

The first step is to download Eclipse from their [http://www.eclipse.org/downloads/ main website]:

[http://www.post-digital.net/~phortran/pages/development-manual/1-download.jpg]

Next you'll need to download a JDK.  You can get a Windows or Linux JDK from sun's website, and an OSX JDK is available through Apple.

[http://developer.apple.com/Java/download OSX JDK]
[http://java.sun.com/javase/downloads/index.jsp Windows JDK]

(Someone should fill in instructions here for OSX) For Windows, you'll want to get this version:

[http://www.post-digital.net/~phortran/pages/development-manual/2-jdk-download.jpg]

Next, install the JDK.  For Windows, I generally put it in an easy to remember place, in this example I put it in c:\code\jdk.  It's up to you though:

[http://www.post-digital.net/~phortran/pages/development-manual/3-jdk-install.jpg]

Now unzip the Eclipse zip file you downloaded in the first step.  In this example, I put it in c:\code.  Unzip it and run eclipse.exe:

[http://www.post-digital.net/~phortran/pages/development-manual/4-eclipse-unzip.jpg]

When you run eclipse.exe for the first time you'll be asked to select a workspace.  This is the folder where all of your code/etc. will be stored/compiled/run from.  You can pick wherever you'd like, in this example I picked c:\code\workspace:

[http://www.post-digital.net/~phortran/pages/development-manual/5-workspace.jpg]

Next you'll get this strange screen with various icons in weird places.  Find the 'Workbench' icon and click on that:

[http://www.post-digital.net/~phortran/pages/development-manual/6-workbench.jpg]

You'll now be in the main Eclipse environment.  The first thing you need to do is install a plugin called 'Subclipse'.  Subclipse is a subversion plugin for Eclipse that lets you easily pull down updates or commit your own patches to the main code base.  Subversion is a source code versioning and storage application that is used by code.google.com (and many, many other organizations).  To install the Subclipse plugin, go to the help menu and choose Software Updates...:

[http://www.post-digital.net/~phortran/pages/development-manual/7-software-updates.jpg]

In the window that pops up, click on the 'Available Software' tab.  This is the interface for installing plugins and extensions into Eclipse.  From the Available Software tab, click on the 'Add Site...' button.  A dialog box will pop up asking you for the Location.  Put in http://subclipse.tigris.org/update_1.2.x:

[http://www.post-digital.net/~phortran/pages/development-manual/8-add-site.jpg]

Now that the site is added we want to actually install the plugin from the site.  You'll also see the URL you just entered in the list.  Click to expand it and select the Subclipse Plugin.  When that has been selected click on the 'Install...' button:

[http://www.post-digital.net/~phortran/pages/development-manual/9-select-subclipse.jpg]

You'll be asked to confirm the items to install.  Click Next, accept the license terms, and click on Finish.  When it finishes installing, it will ask you to restart Eclipse for the changes to take effect.  Choose Yes to restart Eclipse.  Now you're ready to pull down the code.  First, create a new project by going to the File menu -> New -> Project... You will be see the new project wizard.  Expand the SVN folder and choose Checkout Projects from SVN and click Next:

[http://www.post-digital.net/~phortran/pages/development-manual/10-new-project.jpg]

On the next page keep 'Create a new repository location' selected and click Next.  When it asks for the URL, give it this URL:

http://monome-pages.googlecode.com/svn/trunk/